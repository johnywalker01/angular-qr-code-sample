{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { ScannerQRCodeSymbolType } from 'ngx-scanner-qrcode';\nimport { delay } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-scanner-qrcode\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"action\"];\nfunction QrCodeScannerComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"\\u231B Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nlet QrCodeScannerComponent = /*#__PURE__*/(() => {\n  class QrCodeScannerComponent {\n    constructor(qrCode) {\n      this.qrCode = qrCode;\n      this.config = {\n        // fps: 1000,\n        vibrate: 400,\n        // isBeep: false,\n        // decode: 'macintosh',\n        constraints: {\n          video: {\n            width: window.innerWidth // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n          }\n        }\n        // canvasStyles: {\n        //   font: '17px serif',\n        //   lineWidth: 1,\n        //   fillStyle: '#ff001854',\n        //   strokeStyle: '#ff0018c7',\n        // } as any // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\n      };\n\n      this.qrCodeResult = [];\n      this.qrCodeResult2 = [];\n      this.onScan = new EventEmitter();\n    }\n    ngAfterViewInit() {\n      this.action.isReady.pipe(delay(1000)).subscribe(() => {\n        this.handle(this.action, 'stop');\n      });\n    }\n    onEvent(results, action) {\n      results?.length && action && action.pause(); // Detect once and pause scan!\n      console.log(results);\n      if (results.length) {\n        let values = [];\n        const filteredQrCodeArray = results.filter(result => result.type === ScannerQRCodeSymbolType.ScannerQRCode_QRCODE);\n        for (const [index, result] of filteredQrCodeArray.entries()) {\n          const qrCodeValue = result.value;\n          values.push(qrCodeValue);\n        }\n        this.onScan.emit(values);\n        this.handle(action, 'stop');\n      }\n    }\n    onEventImageScanner(e) {\n      console.log(e);\n      // this.onScanComplete.emit([]);\n    }\n\n    handle(action, fn) {\n      if (fn === 'start') {\n        const playDeviceFacingBack = devices => {\n          // front camera or back camera check here!\n          const device = devices.find(f => /back|rear|environment/gi.test(f.label)); // Default Back Facing Camera\n          action.playDevice(device ? device.deviceId : devices[0].deviceId);\n        };\n        action[fn](playDeviceFacingBack).subscribe(r => console.log(fn, r), alert);\n      } else {\n        action[fn]().subscribe(r => console.log(fn, r), alert);\n      }\n    }\n    onSelects(files) {\n      this.qrCode.loadFiles(files).subscribe(res => {\n        this.qrCodeResult = res;\n      });\n    }\n    onSelects2(files) {\n      this.qrCode.loadFilesToScan(files, this.config).subscribe(res => {\n        console.log(res);\n        this.qrCodeResult2 = res;\n      });\n    }\n  }\n  QrCodeScannerComponent.ɵfac = function QrCodeScannerComponent_Factory(t) {\n    return new (t || QrCodeScannerComponent)(i0.ɵɵdirectiveInject(i1.NgxScannerQrcodeService));\n  };\n  QrCodeScannerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QrCodeScannerComponent,\n    selectors: [[\"app-qr-code-scanner\"]],\n    viewQuery: function QrCodeScannerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.action = _t.first);\n      }\n    },\n    outputs: {\n      onScan: \"onScan\"\n    },\n    decls: 11,\n    vars: 20,\n    consts: [[1, \"container\"], [3, \"config\", \"event\"], [\"action\", \"scanner\"], [4, \"ngIf\"], [1, \"btn\", 3, \"disabled\", \"click\"], [\"width\", \"30px\", 3, \"src\"]],\n    template: function QrCodeScannerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"ngx-scanner-qrcode\", 1, 2);\n        i0.ɵɵlistener(\"event\", function QrCodeScannerComponent_Template_ngx_scanner_qrcode_event_1_listener($event) {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(2);\n          return i0.ɵɵresetView(ctx.onEvent($event, _r0));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, QrCodeScannerComponent_p_3_Template, 2, 0, \"p\", 3);\n        i0.ɵɵelementStart(4, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function QrCodeScannerComponent_Template_button_click_4_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(2);\n          return i0.ɵɵresetView(ctx.handle(_r0, _r0.isStart ? \"stop\" : \"start\"));\n        });\n        i0.ɵɵelement(5, \"img\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function QrCodeScannerComponent_Template_button_click_6_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(2);\n          return i0.ɵɵresetView(ctx.handle(_r0, _r0.isPause ? \"play\" : \"pause\"));\n        });\n        i0.ɵɵelement(7, \"img\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function QrCodeScannerComponent_Template_button_click_8_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(2);\n          _r0.isTorch = !_r0.isTorch;\n          return i0.ɵɵresetView(ctx.handle(_r0, \"torcher\"));\n        });\n        i0.ɵɵelement(9, \"img\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(2);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"config\", ctx.config);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"btn-info\", !_r0.isStart)(\"btn-warning\", _r0.isStart);\n        i0.ɵɵproperty(\"disabled\", _r0.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"src\", _r0.isStart ? \"https://id1945.github.io/images/svg/camera-off.svg\" : \"https://id1945.github.io/images/svg/camera-on.svg\", i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"btn-info\", !_r0.isStart)(\"btn-warning\", _r0.isStart);\n        i0.ɵɵproperty(\"disabled\", !_r0.isStart);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"src\", _r0.isPause ? \"https://id1945.github.io/images/svg/play.svg\" : \"https://id1945.github.io/images/svg/pause.svg\", i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"btn-info\", !_r0.isStart)(\"btn-warning\", _r0.isStart);\n        i0.ɵɵproperty(\"disabled\", !_r0.isStart);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"src\", _r0.isTorch ? \"https://id1945.github.io/images/svg/flash-off.svg\" : \"https://id1945.github.io/images/svg/flash-on.svg\", i0.ɵɵsanitizeUrl);\n      }\n    },\n    dependencies: [i2.NgIf, i1.NgxScannerQrcodeComponent],\n    styles: [\".container[_ngcontent-%COMP%]{max-width:400px}.btn-info[_ngcontent-%COMP%]{background-color:#0ff}\"]\n  });\n  return QrCodeScannerComponent;\n})();\nexport { QrCodeScannerComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}